{"version":3,"file":"camera.min.js","sources":["../src/camera.js"],"sourcesContent":["/**\r\n * Saves the image and ...\r\n * @param {video} video - The camera feedback\r\n * @param {canvas} canvas - The canvas where the image will be temporally saved\r\n * @param {string} title The title of the page where the photo is taken\r\n * @param {number} userId The id of the user\r\n * @returns Nothing\r\n */\r\nfunction save_image(video, canvas, title, userId) {\r\n    canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\r\n    const url = \"http://www.localhost/moodle/blocks/simplecamera/api.php\";\r\n    const mockBody = {\r\n        photo: canvas.toDataURL(),\r\n        page:  title,\r\n        userId: userId\r\n    };\r\n\r\n    console.log(mockBody);\r\n\r\n    fetch(url, {\r\n        method: \"POST\",\r\n        mode: \"no-cors\",\r\n        headers: {\r\n            \"Content-type\":\"application/json\"\r\n        },\r\n        body: JSON.stringify(mockBody)\r\n    });\r\n}\r\n\r\n/**\r\n * Get the current time value from local storage\r\n * @returns {number} A number that represents time.\r\n */\r\nfunction getFromLocalStorage() {\r\n    return parseInt(localStorage.getItem(\"timeTranscurred\"));\r\n}\r\n\r\n/**\r\n * Put a value of the local storage.\r\n * @param {number} seconds A number which represents the time transcurred in the timer\r\n */\r\nfunction pushToLocalStorage(seconds) {\r\n    localStorage.setItem(\"timeTranscurred\", seconds.toString());\r\n}\r\n\r\nexport const init = (timer, title, id) => {\r\n    let video = document.querySelector(\"#camera\");\r\n    let canvas = document.querySelector(\"#canvas\");\r\n    let save_button = document.querySelector(\"#save_button\");\r\n\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: false }).then((stream) => {\r\n        video.srcObject = stream;\r\n        video.play();\r\n    }).catch((error) => window.alert(error));\r\n\r\n    save_button.addEventListener('click', function() {\r\n        save_image(video, canvas);\r\n    });\r\n\r\n    if(getFromLocalStorage() === null || isNaN(getFromLocalStorage())) {\r\n        pushToLocalStorage(0);\r\n    }\r\n    setInterval(() => {\r\n        if(getFromLocalStorage()  === timer/1000) {\r\n            save_image(video, canvas, title, id);\r\n            pushToLocalStorage(0);\r\n        }else {\r\n            const aux = getFromLocalStorage();\r\n            pushToLocalStorage(aux+1);\r\n        }\r\n    }, 1000);\r\n};\r\n"],"names":["save_image","video","canvas","title","userId","getContext","drawImage","width","height","mockBody","photo","toDataURL","page","console","log","fetch","method","mode","headers","body","JSON","stringify","getFromLocalStorage","parseInt","localStorage","getItem","pushToLocalStorage","seconds","setItem","toString","timer","id","document","querySelector","save_button","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","play","catch","error","window","alert","addEventListener","isNaN","setInterval"],"mappings":"4EAQSA,WAAWC,MAAOC,OAAQC,MAAOC,QACtCF,OAAOG,WAAW,MAAMC,UAAUL,MAAO,EAAG,EAAGC,OAAOK,MAAOL,OAAOM,cAE9DC,SAAW,CACbC,MAAOR,OAAOS,YACdC,KAAOT,MACPC,OAAQA,QAGZS,QAAQC,IAAIL,UAEZM,MATY,0DASD,CACPC,OAAQ,OACRC,KAAM,UACNC,QAAS,gBACU,oBAEnBC,KAAMC,KAAKC,UAAUZ,qBAQpBa,6BACEC,SAASC,aAAaC,QAAQ,6BAOhCC,mBAAmBC,SACxBH,aAAaI,QAAQ,kBAAmBD,QAAQE,uGAGhC,CAACC,MAAO3B,MAAO4B,UAC3B9B,MAAQ+B,SAASC,cAAc,WAC/B/B,OAAS8B,SAASC,cAAc,WAChCC,YAAcF,SAASC,cAAc,gBAEzCE,UAAUC,aAAaC,aAAa,CAAEpC,OAAO,EAAMqC,OAAO,IAASC,MAAMC,SACrEvC,MAAMwC,UAAYD,OAClBvC,MAAMyC,UACPC,OAAOC,OAAUC,OAAOC,MAAMF,SAEjCV,YAAYa,iBAAiB,SAAS,WAClC/C,WAAWC,MAAOC,YAGO,OAA1BoB,uBAAkC0B,MAAM1B,yBACvCI,mBAAmB,GAEvBuB,aAAY,QACL3B,wBAA2BQ,MAAM,IAChC9B,WAAWC,MAAOC,OAAQC,MAAO4B,IACjCL,mBAAmB,OACjB,CAEFA,mBADYJ,sBACW,MAE5B"}